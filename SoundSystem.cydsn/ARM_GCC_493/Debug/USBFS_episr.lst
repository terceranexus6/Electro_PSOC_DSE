ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_EP_2_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_EP_2_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_EP_2_ISR, %function
  24              	USBFS_EP_2_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\USBFS_episr.c"
   1:Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/USBFS_episr.c **** * File Name: USBFS_episr.c
   3:Generated_Source\PSoC5/USBFS_episr.c **** * Version 2.70
   4:Generated_Source\PSoC5/USBFS_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_episr.c **** * Description:
   6:Generated_Source\PSoC5/USBFS_episr.c **** *  Data endpoint Interrupt Service Routines
   7:Generated_Source\PSoC5/USBFS_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_episr.c **** * Note:
   9:Generated_Source\PSoC5/USBFS_episr.c **** *
  10:Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
  11:Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/USBFS_episr.c **** 
  17:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS.h"
  18:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  19:Generated_Source\PSoC5/USBFS_episr.c **** #if (defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u))
  20:Generated_Source\PSoC5/USBFS_episr.c ****     #include "USBFS_midi.h"
  21:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (defined(USBFS_ENABLE_MIDI_STREAMING) && (USBFS_ENABLE_MIDI_API != 0u)) */
  22:Generated_Source\PSoC5/USBFS_episr.c **** #if ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u))
  23:Generated_Source\PSoC5/USBFS_episr.c ****     #include "USBFS_EP8_DMA_Done_SR.h"
  24:Generated_Source\PSoC5/USBFS_episr.c ****     #include "USBFS_EP17_DMA_Done_SR.h"
  25:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u) */
  26:Generated_Source\PSoC5/USBFS_episr.c **** 
  27:Generated_Source\PSoC5/USBFS_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  29:Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  30:Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  31:Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 2


  32:Generated_Source\PSoC5/USBFS_episr.c **** 
  33:Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  34:Generated_Source\PSoC5/USBFS_episr.c **** 
  35:Generated_Source\PSoC5/USBFS_episr.c **** 
  36:Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP1_ISR_REMOVE == 0u)
  37:Generated_Source\PSoC5/USBFS_episr.c **** 
  38:Generated_Source\PSoC5/USBFS_episr.c **** 
  39:Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
  40:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
  41:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************
  42:Generated_Source\PSoC5/USBFS_episr.c ****     *
  43:Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
  44:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  45:Generated_Source\PSoC5/USBFS_episr.c ****     *
  46:Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
  47:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
  48:Generated_Source\PSoC5/USBFS_episr.c ****     *
  49:Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
  50:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
  51:Generated_Source\PSoC5/USBFS_episr.c ****     *
  52:Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  53:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  54:Generated_Source\PSoC5/USBFS_episr.c ****     {
  55:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT)  && \
  56:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
  57:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
  58:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
  59:Generated_Source\PSoC5/USBFS_episr.c **** 
  60:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  61:Generated_Source\PSoC5/USBFS_episr.c **** 
  62:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  63:Generated_Source\PSoC5/USBFS_episr.c **** 
  64:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
  65:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
  66:Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
  67:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
  68:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
  69:Generated_Source\PSoC5/USBFS_episr.c **** 
  70:Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP1_CR0_PTR); /* Must read the mode reg */
  71:Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
  72:Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP1].attrib & USBFS_EP_TYPE_MASK) !=
  73:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
  74:Generated_Source\PSoC5/USBFS_episr.c ****         {
  75:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  76:Generated_Source\PSoC5/USBFS_episr.c ****         }
  77:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  78:Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR) &
  79:Generated_Source\PSoC5/USBFS_episr.c ****                                                                     (uint8)~USBFS_SIE_EP_INT_EP1_MA
  80:Generated_Source\PSoC5/USBFS_episr.c **** 
  81:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
  82:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT)
  83:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP1)
  84:Generated_Source\PSoC5/USBFS_episr.c ****             {
  85:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
  86:Generated_Source\PSoC5/USBFS_episr.c ****             }
  87:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /*  USBFS_ISR_SERVICE_MIDI_OUT */
  88:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 3


  89:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  90:Generated_Source\PSoC5/USBFS_episr.c **** 
  91:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  92:Generated_Source\PSoC5/USBFS_episr.c **** 
  93:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
  94:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
  95:Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
  96:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
  97:Generated_Source\PSoC5/USBFS_episr.c ****     }
  98:Generated_Source\PSoC5/USBFS_episr.c **** 
  99:Generated_Source\PSoC5/USBFS_episr.c **** #endif   /*  USBFS_EP1_ISR_REMOVE */
 100:Generated_Source\PSoC5/USBFS_episr.c **** 
 101:Generated_Source\PSoC5/USBFS_episr.c **** 
 102:Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP2_ISR_REMOVE == 0u)
 103:Generated_Source\PSoC5/USBFS_episr.c **** 
 104:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 105:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 106:Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 107:Generated_Source\PSoC5/USBFS_episr.c ****     *
 108:Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 109:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine
 110:Generated_Source\PSoC5/USBFS_episr.c ****     *
 111:Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 112:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 113:Generated_Source\PSoC5/USBFS_episr.c ****     *
 114:Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 115:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 116:Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 118:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 119:Generated_Source\PSoC5/USBFS_episr.c ****     {
  27              		.loc 1 119 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
 120:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 121:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 122:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 123:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
 124:Generated_Source\PSoC5/USBFS_episr.c **** 
 125:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 126:Generated_Source\PSoC5/USBFS_episr.c **** 
 127:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 128:Generated_Source\PSoC5/USBFS_episr.c **** 
 129:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 130:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 131:Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 132:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 133:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
 134:Generated_Source\PSoC5/USBFS_episr.c **** 
 135:Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP2_CR0_PTR); /* Must read the mode reg */
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 4


  37              		.loc 1 135 0
  38 0004 104B     		ldr	r3, .L3
  39 0006 1B78     		ldrb	r3, [r3]
 136:Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 137:Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP2].attrib & USBFS_EP_TYPE_MASK) !=
  40              		.loc 1 137 0
  41 0008 104B     		ldr	r3, .L3+4
  42 000a 1B7E     		ldrb	r3, [r3, #24]
  43 000c DBB2     		uxtb	r3, r3
  44 000e 03F00303 		and	r3, r3, #3
  45 0012 012B     		cmp	r3, #1
  46 0014 08D0     		beq	.L2
 138:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 139:Generated_Source\PSoC5/USBFS_episr.c ****         {
 140:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  47              		.loc 1 140 0
  48 0016 0D4B     		ldr	r3, .L3+4
  49 0018 DB7E     		ldrb	r3, [r3, #27]
  50 001a DBB2     		uxtb	r3, r3
  51 001c 83F07F03 		eor	r3, r3, #127
  52 0020 DB43     		mvns	r3, r3
  53 0022 DAB2     		uxtb	r2, r3
  54 0024 094B     		ldr	r3, .L3+4
  55 0026 DA76     		strb	r2, [r3, #27]
  56              	.L2:
 141:Generated_Source\PSoC5/USBFS_episr.c ****         }
 142:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
  57              		.loc 1 142 0
  58 0028 084B     		ldr	r3, .L3+4
  59 002a 0122     		movs	r2, #1
  60 002c 5A76     		strb	r2, [r3, #25]
 143:Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
  61              		.loc 1 143 0
  62 002e 084A     		ldr	r2, .L3+8
  63 0030 074B     		ldr	r3, .L3+8
  64 0032 1B78     		ldrb	r3, [r3]
  65 0034 DBB2     		uxtb	r3, r3
  66 0036 23F00203 		bic	r3, r3, #2
  67 003a DBB2     		uxtb	r3, r3
  68 003c 1370     		strb	r3, [r2]
 144:Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & (uint8)~USBFS_SIE_EP_INT_
 145:Generated_Source\PSoC5/USBFS_episr.c **** 
 146:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 147:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT)
 148:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP2)
 149:Generated_Source\PSoC5/USBFS_episr.c ****             {
 150:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 151:Generated_Source\PSoC5/USBFS_episr.c ****             }
 152:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /*  USBFS_ISR_SERVICE_MIDI_OUT */
 153:Generated_Source\PSoC5/USBFS_episr.c **** 
 154:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 155:Generated_Source\PSoC5/USBFS_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 157:Generated_Source\PSoC5/USBFS_episr.c **** 
 158:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 159:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 160:Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 5


 161:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
 162:Generated_Source\PSoC5/USBFS_episr.c ****     }
  69              		.loc 1 162 0
  70 003e BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0040 5DF8047B 		ldr	r7, [sp], #4
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 0044 7047     		bx	lr
  77              	.L4:
  78 0046 00BF     		.align	2
  79              	.L3:
  80 0048 1E600040 		.word	1073766430
  81 004c 00000000 		.word	USBFS_EP
  82 0050 0B600040 		.word	1073766411
  83              		.cfi_endproc
  84              	.LFE0:
  85              		.size	USBFS_EP_2_ISR, .-USBFS_EP_2_ISR
  86              		.section	.text.USBFS_SOF_ISR,"ax",%progbits
  87              		.align	2
  88              		.global	USBFS_SOF_ISR
  89              		.thumb
  90              		.thumb_func
  91              		.type	USBFS_SOF_ISR, %function
  92              	USBFS_SOF_ISR:
  93              	.LFB1:
 163:Generated_Source\PSoC5/USBFS_episr.c **** 
 164:Generated_Source\PSoC5/USBFS_episr.c **** #endif   /*  USBFS_EP2_ISR_REMOVE */
 165:Generated_Source\PSoC5/USBFS_episr.c **** 
 166:Generated_Source\PSoC5/USBFS_episr.c **** 
 167:Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP3_ISR_REMOVE == 0u)
 168:Generated_Source\PSoC5/USBFS_episr.c **** 
 169:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 170:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 171:Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 172:Generated_Source\PSoC5/USBFS_episr.c ****     *
 173:Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 174:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine
 175:Generated_Source\PSoC5/USBFS_episr.c ****     *
 176:Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 177:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 178:Generated_Source\PSoC5/USBFS_episr.c ****     *
 179:Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 180:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 181:Generated_Source\PSoC5/USBFS_episr.c ****     *
 182:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 183:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 184:Generated_Source\PSoC5/USBFS_episr.c ****     {
 185:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 186:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 187:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 188:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
 189:Generated_Source\PSoC5/USBFS_episr.c **** 
 190:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 191:Generated_Source\PSoC5/USBFS_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 6


 193:Generated_Source\PSoC5/USBFS_episr.c **** 
 194:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 195:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 196:Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 197:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 198:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 199:Generated_Source\PSoC5/USBFS_episr.c **** 
 200:Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP3_CR0_PTR); /* Must read the mode reg */
 201:Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 202:Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP3].attrib & USBFS_EP_TYPE_MASK) !=
 203:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 204:Generated_Source\PSoC5/USBFS_episr.c ****         {
 205:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 206:Generated_Source\PSoC5/USBFS_episr.c ****         }
 207:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 208:Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 209:Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & (uint8)~USBFS_SIE_EP_INT_
 210:Generated_Source\PSoC5/USBFS_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 212:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP3)
 214:Generated_Source\PSoC5/USBFS_episr.c ****             {
 215:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 216:Generated_Source\PSoC5/USBFS_episr.c ****             }
 217:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /*  USBFS_ISR_SERVICE_MIDI_OUT */
 218:Generated_Source\PSoC5/USBFS_episr.c **** 
 219:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 220:Generated_Source\PSoC5/USBFS_episr.c **** 
 221:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 222:Generated_Source\PSoC5/USBFS_episr.c **** 
 223:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 224:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 225:Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 226:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 227:Generated_Source\PSoC5/USBFS_episr.c ****     }
 228:Generated_Source\PSoC5/USBFS_episr.c **** 
 229:Generated_Source\PSoC5/USBFS_episr.c **** #endif   /*  USBFS_EP3_ISR_REMOVE */
 230:Generated_Source\PSoC5/USBFS_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_episr.c **** 
 232:Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP4_ISR_REMOVE == 0u)
 233:Generated_Source\PSoC5/USBFS_episr.c **** 
 234:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 235:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 236:Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 237:Generated_Source\PSoC5/USBFS_episr.c ****     *
 238:Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 239:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine
 240:Generated_Source\PSoC5/USBFS_episr.c ****     *
 241:Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 242:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 243:Generated_Source\PSoC5/USBFS_episr.c ****     *
 244:Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 245:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 246:Generated_Source\PSoC5/USBFS_episr.c ****     *
 247:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 248:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 249:Generated_Source\PSoC5/USBFS_episr.c ****     {
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 7


 250:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 251:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 252:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 253:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 254:Generated_Source\PSoC5/USBFS_episr.c **** 
 255:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 256:Generated_Source\PSoC5/USBFS_episr.c **** 
 257:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 258:Generated_Source\PSoC5/USBFS_episr.c **** 
 259:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 260:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 261:Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 262:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 263:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 264:Generated_Source\PSoC5/USBFS_episr.c **** 
 265:Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP4_CR0_PTR); /* Must read the mode reg */
 266:Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 267:Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP4].attrib & USBFS_EP_TYPE_MASK) !=
 268:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 269:Generated_Source\PSoC5/USBFS_episr.c ****         {
 270:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 271:Generated_Source\PSoC5/USBFS_episr.c ****         }
 272:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 273:Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 274:Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & (uint8)~USBFS_SIE_EP_INT_
 275:Generated_Source\PSoC5/USBFS_episr.c **** 
 276:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 277:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT)
 278:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 279:Generated_Source\PSoC5/USBFS_episr.c ****             {
 280:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 281:Generated_Source\PSoC5/USBFS_episr.c ****             }
 282:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /*  USBFS_ISR_SERVICE_MIDI_OUT */
 283:Generated_Source\PSoC5/USBFS_episr.c **** 
 284:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 285:Generated_Source\PSoC5/USBFS_episr.c **** 
 286:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 287:Generated_Source\PSoC5/USBFS_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 289:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 290:Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 291:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 292:Generated_Source\PSoC5/USBFS_episr.c ****     }
 293:Generated_Source\PSoC5/USBFS_episr.c **** 
 294:Generated_Source\PSoC5/USBFS_episr.c **** #endif   /*  USBFS_EP4_ISR_REMOVE */
 295:Generated_Source\PSoC5/USBFS_episr.c **** 
 296:Generated_Source\PSoC5/USBFS_episr.c **** 
 297:Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP5_ISR_REMOVE == 0u)
 298:Generated_Source\PSoC5/USBFS_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 300:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 301:Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 302:Generated_Source\PSoC5/USBFS_episr.c ****     *
 303:Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 304:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 305:Generated_Source\PSoC5/USBFS_episr.c ****     *
 306:Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 8


 307:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 308:Generated_Source\PSoC5/USBFS_episr.c ****     *
 309:Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 310:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 311:Generated_Source\PSoC5/USBFS_episr.c ****     *
 312:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 313:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 314:Generated_Source\PSoC5/USBFS_episr.c ****     {
 315:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 316:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 317:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 318:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 319:Generated_Source\PSoC5/USBFS_episr.c **** 
 320:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 321:Generated_Source\PSoC5/USBFS_episr.c **** 
 322:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 323:Generated_Source\PSoC5/USBFS_episr.c **** 
 324:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 325:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 326:Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 327:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 328:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 329:Generated_Source\PSoC5/USBFS_episr.c **** 
 330:Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP5_CR0_PTR); /* Must read the mode reg */
 331:Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 332:Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP5].attrib & USBFS_EP_TYPE_MASK) !=
 333:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 334:Generated_Source\PSoC5/USBFS_episr.c ****         {
 335:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 336:Generated_Source\PSoC5/USBFS_episr.c ****         }
 337:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 338:Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 339:Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & (uint8)~USBFS_SIE_EP_INT_
 340:Generated_Source\PSoC5/USBFS_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 342:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT)
 343:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP5)
 344:Generated_Source\PSoC5/USBFS_episr.c ****             {
 345:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 346:Generated_Source\PSoC5/USBFS_episr.c ****             }
 347:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /*  USBFS_ISR_SERVICE_MIDI_OUT */
 348:Generated_Source\PSoC5/USBFS_episr.c **** 
 349:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 350:Generated_Source\PSoC5/USBFS_episr.c **** 
 351:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 352:Generated_Source\PSoC5/USBFS_episr.c **** 
 353:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 354:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 355:Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 356:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 357:Generated_Source\PSoC5/USBFS_episr.c ****     }
 358:Generated_Source\PSoC5/USBFS_episr.c **** #endif   /*  USBFS_EP5_ISR_REMOVE */
 359:Generated_Source\PSoC5/USBFS_episr.c **** 
 360:Generated_Source\PSoC5/USBFS_episr.c **** 
 361:Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP6_ISR_REMOVE == 0u)
 362:Generated_Source\PSoC5/USBFS_episr.c **** 
 363:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 9


 364:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 365:Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 366:Generated_Source\PSoC5/USBFS_episr.c ****     *
 367:Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 368:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine
 369:Generated_Source\PSoC5/USBFS_episr.c ****     *
 370:Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 371:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 372:Generated_Source\PSoC5/USBFS_episr.c ****     *
 373:Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 374:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 375:Generated_Source\PSoC5/USBFS_episr.c ****     *
 376:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 377:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 378:Generated_Source\PSoC5/USBFS_episr.c ****     {
 379:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 380:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 381:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 382:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 383:Generated_Source\PSoC5/USBFS_episr.c **** 
 384:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 385:Generated_Source\PSoC5/USBFS_episr.c **** 
 386:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 387:Generated_Source\PSoC5/USBFS_episr.c **** 
 388:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 389:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 390:Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 391:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 392:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 393:Generated_Source\PSoC5/USBFS_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP6_CR0_PTR); /* Must read the mode reg */
 395:Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 396:Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP6].attrib & USBFS_EP_TYPE_MASK) !=
 397:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 398:Generated_Source\PSoC5/USBFS_episr.c ****         {
 399:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 400:Generated_Source\PSoC5/USBFS_episr.c ****         }
 401:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 402:Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 403:Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & (uint8)~USBFS_SIE_EP_INT_
 404:Generated_Source\PSoC5/USBFS_episr.c **** 
 405:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 406:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT)
 407:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP6)
 408:Generated_Source\PSoC5/USBFS_episr.c ****             {
 409:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 410:Generated_Source\PSoC5/USBFS_episr.c ****             }
 411:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /*  USBFS_ISR_SERVICE_MIDI_OUT  */
 412:Generated_Source\PSoC5/USBFS_episr.c **** 
 413:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 414:Generated_Source\PSoC5/USBFS_episr.c **** 
 415:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 416:Generated_Source\PSoC5/USBFS_episr.c **** 
 417:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 418:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 419:Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 420:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 10


 421:Generated_Source\PSoC5/USBFS_episr.c ****     }
 422:Generated_Source\PSoC5/USBFS_episr.c **** 
 423:Generated_Source\PSoC5/USBFS_episr.c **** #endif   /*  USBFS_EP6_ISR_REMOVE */
 424:Generated_Source\PSoC5/USBFS_episr.c **** 
 425:Generated_Source\PSoC5/USBFS_episr.c **** 
 426:Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP7_ISR_REMOVE == 0u)
 427:Generated_Source\PSoC5/USBFS_episr.c **** 
 428:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 429:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 430:Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 431:Generated_Source\PSoC5/USBFS_episr.c ****     *
 432:Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 433:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine
 434:Generated_Source\PSoC5/USBFS_episr.c ****     *
 435:Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 436:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 437:Generated_Source\PSoC5/USBFS_episr.c ****     *
 438:Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 439:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 440:Generated_Source\PSoC5/USBFS_episr.c ****     *
 441:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 442:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 443:Generated_Source\PSoC5/USBFS_episr.c ****     {
 444:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 445:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 446:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 447:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 448:Generated_Source\PSoC5/USBFS_episr.c **** 
 449:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 450:Generated_Source\PSoC5/USBFS_episr.c **** 
 451:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 452:Generated_Source\PSoC5/USBFS_episr.c **** 
 453:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 454:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 455:Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 456:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 457:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 458:Generated_Source\PSoC5/USBFS_episr.c **** 
 459:Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP7_CR0_PTR); /* Must read the mode reg */
 460:Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 461:Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP7].attrib & USBFS_EP_TYPE_MASK) !=
 462:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 463:Generated_Source\PSoC5/USBFS_episr.c ****         {
 464:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 465:Generated_Source\PSoC5/USBFS_episr.c ****         }
 466:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 467:Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 468:Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & (uint8)~USBFS_SIE_EP_INT_
 469:Generated_Source\PSoC5/USBFS_episr.c **** 
 470:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 471:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT)
 472:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 473:Generated_Source\PSoC5/USBFS_episr.c ****             {
 474:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 475:Generated_Source\PSoC5/USBFS_episr.c ****             }
 476:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /*  USBFS_ISR_SERVICE_MIDI_OUT  */
 477:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 11


 478:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 479:Generated_Source\PSoC5/USBFS_episr.c **** 
 480:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 481:Generated_Source\PSoC5/USBFS_episr.c **** 
 482:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 483:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 484:Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 485:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 486:Generated_Source\PSoC5/USBFS_episr.c ****     }
 487:Generated_Source\PSoC5/USBFS_episr.c **** 
 488:Generated_Source\PSoC5/USBFS_episr.c **** #endif   /*  USBFS_EP7_ISR_REMOVE */
 489:Generated_Source\PSoC5/USBFS_episr.c **** 
 490:Generated_Source\PSoC5/USBFS_episr.c **** 
 491:Generated_Source\PSoC5/USBFS_episr.c **** #if(USBFS_EP8_ISR_REMOVE == 0u)
 492:Generated_Source\PSoC5/USBFS_episr.c **** 
 493:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 494:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 495:Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 496:Generated_Source\PSoC5/USBFS_episr.c ****     *
 497:Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 498:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 499:Generated_Source\PSoC5/USBFS_episr.c ****     *
 500:Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 501:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 502:Generated_Source\PSoC5/USBFS_episr.c ****     *
 503:Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 504:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 505:Generated_Source\PSoC5/USBFS_episr.c ****     *
 506:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 507:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 508:Generated_Source\PSoC5/USBFS_episr.c ****     {
 509:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 510:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 511:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 int_en;
 512:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 513:Generated_Source\PSoC5/USBFS_episr.c **** 
 514:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 515:Generated_Source\PSoC5/USBFS_episr.c **** 
 516:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 517:Generated_Source\PSoC5/USBFS_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 519:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 520:Generated_Source\PSoC5/USBFS_episr.c ****             int_en = EA;
 521:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 522:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 523:Generated_Source\PSoC5/USBFS_episr.c **** 
 524:Generated_Source\PSoC5/USBFS_episr.c ****         CY_GET_REG8(USBFS_SIE_EP8_CR0_PTR); /* Must read the mode reg */
 525:Generated_Source\PSoC5/USBFS_episr.c ****         /* Do not toggle ISOC endpoint */
 526:Generated_Source\PSoC5/USBFS_episr.c ****         if((USBFS_EP[USBFS_EP8].attrib & USBFS_EP_TYPE_MASK) !=
 527:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP_TYPE_I
 528:Generated_Source\PSoC5/USBFS_episr.c ****         {
 529:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 530:Generated_Source\PSoC5/USBFS_episr.c ****         }
 531:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 532:Generated_Source\PSoC5/USBFS_episr.c ****         CY_SET_REG8(USBFS_SIE_EP_INT_SR_PTR, CY_GET_REG8(USBFS_SIE_EP_INT_SR_PTR)
 533:Generated_Source\PSoC5/USBFS_episr.c ****                                                                         & (uint8)~USBFS_SIE_EP_INT_
 534:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 12


 535:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 536:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT)
 537:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP8)
 538:Generated_Source\PSoC5/USBFS_episr.c ****             {
 539:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_EP_Service();
 540:Generated_Source\PSoC5/USBFS_episr.c ****             }
 541:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /*  USBFS_ISR_SERVICE_MIDI_OUT */
 542:Generated_Source\PSoC5/USBFS_episr.c **** 
 543:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 544:Generated_Source\PSoC5/USBFS_episr.c **** 
 545:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 546:Generated_Source\PSoC5/USBFS_episr.c **** 
 547:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 548:Generated_Source\PSoC5/USBFS_episr.c ****                      USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 549:Generated_Source\PSoC5/USBFS_episr.c ****             EA = int_en;
 550:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* CY_PSOC3 & USBFS_ISR_SERVICE_MIDI_OUT  */
 551:Generated_Source\PSoC5/USBFS_episr.c ****     }
 552:Generated_Source\PSoC5/USBFS_episr.c **** 
 553:Generated_Source\PSoC5/USBFS_episr.c **** #endif   /*  USBFS_EP8_ISR_REMOVE */
 554:Generated_Source\PSoC5/USBFS_episr.c **** 
 555:Generated_Source\PSoC5/USBFS_episr.c **** 
 556:Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 557:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_SOF_ISR
 558:Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
 559:Generated_Source\PSoC5/USBFS_episr.c **** *
 560:Generated_Source\PSoC5/USBFS_episr.c **** * Summary:
 561:Generated_Source\PSoC5/USBFS_episr.c **** *  Start of Frame Interrupt Service Routine
 562:Generated_Source\PSoC5/USBFS_episr.c **** *
 563:Generated_Source\PSoC5/USBFS_episr.c **** * Parameters:
 564:Generated_Source\PSoC5/USBFS_episr.c **** *  None.
 565:Generated_Source\PSoC5/USBFS_episr.c **** *
 566:Generated_Source\PSoC5/USBFS_episr.c **** * Return:
 567:Generated_Source\PSoC5/USBFS_episr.c **** *  None.
 568:Generated_Source\PSoC5/USBFS_episr.c **** *
 569:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 570:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_SOF_ISR)
 571:Generated_Source\PSoC5/USBFS_episr.c **** {
  94              		.loc 1 571 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 572:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START SOF_USER_CODE` Place your code here */
 573:Generated_Source\PSoC5/USBFS_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 575:Generated_Source\PSoC5/USBFS_episr.c **** }
 104              		.loc 1 575 0
 105 0004 BD46     		mov	sp, r7
 106              		.cfi_def_cfa_register 13
 107              		@ sp needed
 108 0006 5DF8047B 		ldr	r7, [sp], #4
 109              		.cfi_restore 7
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 13


 110              		.cfi_def_cfa_offset 0
 111 000a 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE1:
 114              		.size	USBFS_SOF_ISR, .-USBFS_SOF_ISR
 115              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 116              		.align	2
 117              		.global	USBFS_BUS_RESET_ISR
 118              		.thumb
 119              		.thumb_func
 120              		.type	USBFS_BUS_RESET_ISR, %function
 121              	USBFS_BUS_RESET_ISR:
 122              	.LFB2:
 576:Generated_Source\PSoC5/USBFS_episr.c **** 
 577:Generated_Source\PSoC5/USBFS_episr.c **** 
 578:Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 579:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 580:Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
 581:Generated_Source\PSoC5/USBFS_episr.c **** *
 582:Generated_Source\PSoC5/USBFS_episr.c **** * Summary:
 583:Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 584:Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 585:Generated_Source\PSoC5/USBFS_episr.c **** *
 586:Generated_Source\PSoC5/USBFS_episr.c **** * Parameters:
 587:Generated_Source\PSoC5/USBFS_episr.c **** *  None.
 588:Generated_Source\PSoC5/USBFS_episr.c **** *
 589:Generated_Source\PSoC5/USBFS_episr.c **** * Return:
 590:Generated_Source\PSoC5/USBFS_episr.c **** *  None.
 591:Generated_Source\PSoC5/USBFS_episr.c **** *
 592:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 593:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 594:Generated_Source\PSoC5/USBFS_episr.c **** {
 123              		.loc 1 594 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 1, uses_anonymous_args = 0
 127 0000 80B5     		push	{r7, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 595:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 596:Generated_Source\PSoC5/USBFS_episr.c **** 
 597:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 598:Generated_Source\PSoC5/USBFS_episr.c **** 
 599:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 133              		.loc 1 599 0
 134 0004 FFF7FEFF 		bl	USBFS_ReInitComponent
 600:Generated_Source\PSoC5/USBFS_episr.c **** }
 135              		.loc 1 600 0
 136 0008 80BD     		pop	{r7, pc}
 137              		.cfi_endproc
 138              	.LFE2:
 139              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 140 000a 00BF     		.section	.text.USBFS_ARB_ISR,"ax",%progbits
 141              		.align	2
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 14


 142              		.global	USBFS_ARB_ISR
 143              		.thumb
 144              		.thumb_func
 145              		.type	USBFS_ARB_ISR, %function
 146              	USBFS_ARB_ISR:
 147              	.LFB3:
 601:Generated_Source\PSoC5/USBFS_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_episr.c **** 
 603:Generated_Source\PSoC5/USBFS_episr.c **** #if((USBFS_EP_MM != USBFS__EP_MANUAL) && (USBFS_ARB_ISR_REMOVE == 0u))
 604:Generated_Source\PSoC5/USBFS_episr.c **** 
 605:Generated_Source\PSoC5/USBFS_episr.c **** 
 606:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 607:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_ARB_ISR
 608:Generated_Source\PSoC5/USBFS_episr.c ****     ********************************************************************************
 609:Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_episr.c ****     * Summary:
 611:Generated_Source\PSoC5/USBFS_episr.c ****     *  Arbiter Interrupt Service Routine
 612:Generated_Source\PSoC5/USBFS_episr.c ****     *
 613:Generated_Source\PSoC5/USBFS_episr.c ****     * Parameters:
 614:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 615:Generated_Source\PSoC5/USBFS_episr.c ****     *
 616:Generated_Source\PSoC5/USBFS_episr.c ****     * Return:
 617:Generated_Source\PSoC5/USBFS_episr.c ****     *  None.
 618:Generated_Source\PSoC5/USBFS_episr.c ****     *
 619:Generated_Source\PSoC5/USBFS_episr.c ****     * Side effect:
 620:Generated_Source\PSoC5/USBFS_episr.c ****     *  Search for EP8 int_status will be much slower than search for EP1 int_status.
 621:Generated_Source\PSoC5/USBFS_episr.c ****     *
 622:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 623:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_ARB_ISR)
 624:Generated_Source\PSoC5/USBFS_episr.c ****     {
 148              		.loc 1 624 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152              		@ link register save eliminated.
 153 0000 80B4     		push	{r7}
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 7, -4
 156 0002 83B0     		sub	sp, sp, #12
 157              		.cfi_def_cfa_offset 16
 158 0004 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 625:Generated_Source\PSoC5/USBFS_episr.c ****         uint8 int_status;
 626:Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ep_status;
 627:Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ep = USBFS_EP1;
 160              		.loc 1 627 0
 161 0006 0123     		movs	r3, #1
 162 0008 BB71     		strb	r3, [r7, #6]
 628:Generated_Source\PSoC5/USBFS_episr.c ****         uint8 ptr = 0u;
 163              		.loc 1 628 0
 164 000a 0023     		movs	r3, #0
 165 000c 7B71     		strb	r3, [r7, #5]
 629:Generated_Source\PSoC5/USBFS_episr.c **** 
 630:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_BEGIN_USER_CODE` Place your code here */
 631:Generated_Source\PSoC5/USBFS_episr.c **** 
 632:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 633:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 15


 634:Generated_Source\PSoC5/USBFS_episr.c ****         int_status = USBFS_ARB_INT_SR_REG;                   /* read Arbiter Status Register */
 166              		.loc 1 634 0
 167 000e 414B     		ldr	r3, .L13
 168 0010 1B78     		ldrb	r3, [r3]
 169 0012 FB71     		strb	r3, [r7, #7]
 635:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ARB_INT_SR_REG = int_status;                   /* Clear Serviced Interrupts */
 170              		.loc 1 635 0
 171 0014 3F4A     		ldr	r2, .L13
 172 0016 FB79     		ldrb	r3, [r7, #7]
 173 0018 1370     		strb	r3, [r2]
 636:Generated_Source\PSoC5/USBFS_episr.c **** 
 637:Generated_Source\PSoC5/USBFS_episr.c ****         while(int_status != 0u)
 174              		.loc 1 637 0
 175 001a 72E0     		b	.L8
 176              	.L12:
 638:Generated_Source\PSoC5/USBFS_episr.c ****         {
 639:Generated_Source\PSoC5/USBFS_episr.c ****             if((int_status & 1u) != 0u)  /* If EpX interrupt present */
 177              		.loc 1 639 0
 178 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 179 001e 03F00103 		and	r3, r3, #1
 180 0022 002B     		cmp	r3, #0
 181 0024 64D0     		beq	.L9
 640:Generated_Source\PSoC5/USBFS_episr.c ****             {   /* read Endpoint Status Register */
 641:Generated_Source\PSoC5/USBFS_episr.c ****                 ep_status  = CY_GET_REG8((reg8 *)(USBFS_ARB_EP1_SR_IND + ptr));
 182              		.loc 1 641 0
 183 0026 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 184 0028 3B4B     		ldr	r3, .L13+4
 185 002a 1344     		add	r3, r3, r2
 186 002c 1B78     		ldrb	r3, [r3]
 187 002e 3B71     		strb	r3, [r7, #4]
 642:Generated_Source\PSoC5/USBFS_episr.c ****                 /* If In Buffer Full */
 643:Generated_Source\PSoC5/USBFS_episr.c ****                 if((ep_status & USBFS_ARB_EPX_SR_IN_BUF_FULL) != 0u)
 188              		.loc 1 643 0
 189 0030 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 190 0032 03F00103 		and	r3, r3, #1
 191 0036 002B     		cmp	r3, #0
 192 0038 2BD0     		beq	.L10
 644:Generated_Source\PSoC5/USBFS_episr.c ****                 {
 645:Generated_Source\PSoC5/USBFS_episr.c ****                     if((USBFS_EP[ep].addr & USBFS_DIR_IN) != 0u)
 193              		.loc 1 645 0
 194 003a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 195 003c 3749     		ldr	r1, .L13+8
 196 003e 1346     		mov	r3, r2
 197 0040 5B00     		lsls	r3, r3, #1
 198 0042 1344     		add	r3, r3, r2
 199 0044 9B00     		lsls	r3, r3, #2
 200 0046 0B44     		add	r3, r3, r1
 201 0048 1B79     		ldrb	r3, [r3, #4]
 202 004a DBB2     		uxtb	r3, r3
 203 004c DBB2     		uxtb	r3, r3
 204 004e 5BB2     		sxtb	r3, r3
 205 0050 002B     		cmp	r3, #0
 206 0052 1EDA     		bge	.L10
 646:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 647:Generated_Source\PSoC5/USBFS_episr.c ****                         /* Clear Data ready status */
 648:Generated_Source\PSoC5/USBFS_episr.c ****                         *(reg8 *)(USBFS_ARB_EP1_CFG_IND + ptr) &=
 207              		.loc 1 648 0
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 16


 208 0054 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 209 0056 03F18043 		add	r3, r3, #1073741824
 210 005a 03F5C143 		add	r3, r3, #24704
 211 005e 1A46     		mov	r2, r3
 212 0060 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 213 0062 03F18043 		add	r3, r3, #1073741824
 214 0066 03F5C143 		add	r3, r3, #24704
 215 006a 1B78     		ldrb	r3, [r3]
 216 006c DBB2     		uxtb	r3, r3
 217 006e 23F00103 		bic	r3, r3, #1
 218 0072 DBB2     		uxtb	r3, r3
 219 0074 1370     		strb	r3, [r2]
 649:Generated_Source\PSoC5/USBFS_episr.c ****                                                                     (uint8)~USBFS_ARB_EPX_CFG_IN_DA
 650:Generated_Source\PSoC5/USBFS_episr.c ****                         #if((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 0u))
 651:Generated_Source\PSoC5/USBFS_episr.c ****                             /* Setup common area DMA with rest of the data */
 652:Generated_Source\PSoC5/USBFS_episr.c ****                             if(USBFS_inLength[ep] > USBFS_DMA_BYTES_PER_BURST)
 653:Generated_Source\PSoC5/USBFS_episr.c ****                             {
 654:Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_LoadNextInEP(ep, 0u);
 655:Generated_Source\PSoC5/USBFS_episr.c ****                             }
 656:Generated_Source\PSoC5/USBFS_episr.c ****                             else
 657:Generated_Source\PSoC5/USBFS_episr.c ****                             {
 658:Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_inBufFull[ep] = 1u;
 659:Generated_Source\PSoC5/USBFS_episr.c ****                             }
 660:Generated_Source\PSoC5/USBFS_episr.c ****                         #endif /* ((USBFS_EP_MM == USBFS__EP_DMAAUTO) && (USBFS_EP_DMA_AUTO_OPT == 
 661:Generated_Source\PSoC5/USBFS_episr.c ****                         /* Write the Mode register */
 662:Generated_Source\PSoC5/USBFS_episr.c ****                         CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ptr), USBFS_EP[ep].epMode);
 220              		.loc 1 662 0
 221 0076 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 222 0078 294B     		ldr	r3, .L13+12
 223 007a 1344     		add	r3, r3, r2
 224 007c 1846     		mov	r0, r3
 225 007e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 226 0080 2649     		ldr	r1, .L13+8
 227 0082 1346     		mov	r3, r2
 228 0084 5B00     		lsls	r3, r3, #1
 229 0086 1344     		add	r3, r3, r2
 230 0088 9B00     		lsls	r3, r3, #2
 231 008a 0B44     		add	r3, r3, r1
 232 008c 5B79     		ldrb	r3, [r3, #5]
 233 008e DBB2     		uxtb	r3, r3
 234 0090 0370     		strb	r3, [r0]
 235              	.L10:
 663:Generated_Source\PSoC5/USBFS_episr.c ****                         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && USBFS_ISR_SERVICE_MIDI_IN)
 664:Generated_Source\PSoC5/USBFS_episr.c ****                             if(ep == USBFS_midi_in_ep)
 665:Generated_Source\PSoC5/USBFS_episr.c ****                             {   /* Clear MIDI input pointer */
 666:Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_midiInPointer = 0u;
 667:Generated_Source\PSoC5/USBFS_episr.c ****                             }
 668:Generated_Source\PSoC5/USBFS_episr.c ****                         #endif /*  USBFS_ENABLE_MIDI_STREAMING*/
 669:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 670:Generated_Source\PSoC5/USBFS_episr.c ****                 }
 671:Generated_Source\PSoC5/USBFS_episr.c ****                 /* (re)arm Out EP only for mode2 */
 672:Generated_Source\PSoC5/USBFS_episr.c ****                 #if(USBFS_EP_MM != USBFS__EP_DMAAUTO)
 673:Generated_Source\PSoC5/USBFS_episr.c ****                     /* If DMA Grant */
 674:Generated_Source\PSoC5/USBFS_episr.c ****                     if((ep_status & USBFS_ARB_EPX_SR_DMA_GNT) != 0u)
 236              		.loc 1 674 0
 237 0092 3B79     		ldrb	r3, [r7, #4]	@ zero_extendqisi2
 238 0094 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 17


 239 0098 002B     		cmp	r3, #0
 240 009a 23D0     		beq	.L11
 675:Generated_Source\PSoC5/USBFS_episr.c ****                     {
 676:Generated_Source\PSoC5/USBFS_episr.c ****                         if((USBFS_EP[ep].addr & USBFS_DIR_IN) == 0u)
 241              		.loc 1 676 0
 242 009c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 243 009e 1F49     		ldr	r1, .L13+8
 244 00a0 1346     		mov	r3, r2
 245 00a2 5B00     		lsls	r3, r3, #1
 246 00a4 1344     		add	r3, r3, r2
 247 00a6 9B00     		lsls	r3, r3, #2
 248 00a8 0B44     		add	r3, r3, r1
 249 00aa 1B79     		ldrb	r3, [r3, #4]
 250 00ac DBB2     		uxtb	r3, r3
 251 00ae DBB2     		uxtb	r3, r3
 252 00b0 5BB2     		sxtb	r3, r3
 253 00b2 002B     		cmp	r3, #0
 254 00b4 16DB     		blt	.L11
 677:Generated_Source\PSoC5/USBFS_episr.c ****                         {
 678:Generated_Source\PSoC5/USBFS_episr.c ****                                 USBFS_EP[ep].apiEpState = USBFS_NO_EVENT_PENDING;
 255              		.loc 1 678 0
 256 00b6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 257 00b8 1849     		ldr	r1, .L13+8
 258 00ba 1346     		mov	r3, r2
 259 00bc 5B00     		lsls	r3, r3, #1
 260 00be 1344     		add	r3, r3, r2
 261 00c0 9B00     		lsls	r3, r3, #2
 262 00c2 0B44     		add	r3, r3, r1
 263 00c4 0022     		movs	r2, #0
 264 00c6 5A70     		strb	r2, [r3, #1]
 679:Generated_Source\PSoC5/USBFS_episr.c ****                                 /* Write the Mode register */
 680:Generated_Source\PSoC5/USBFS_episr.c ****                                 CY_SET_REG8((reg8 *)(USBFS_SIE_EP1_CR0_IND + ptr),
 265              		.loc 1 680 0
 266 00c8 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 267 00ca 154B     		ldr	r3, .L13+12
 268 00cc 1344     		add	r3, r3, r2
 269 00ce 1846     		mov	r0, r3
 270 00d0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 271 00d2 1249     		ldr	r1, .L13+8
 272 00d4 1346     		mov	r3, r2
 273 00d6 5B00     		lsls	r3, r3, #1
 274 00d8 1344     		add	r3, r3, r2
 275 00da 9B00     		lsls	r3, r3, #2
 276 00dc 0B44     		add	r3, r3, r1
 277 00de 5B79     		ldrb	r3, [r3, #5]
 278 00e0 DBB2     		uxtb	r3, r3
 279 00e2 0370     		strb	r3, [r0]
 280              	.L11:
 681:Generated_Source\PSoC5/USBFS_episr.c ****                                                                                     USBFS_EP[ep].ep
 682:Generated_Source\PSoC5/USBFS_episr.c ****                         }
 683:Generated_Source\PSoC5/USBFS_episr.c ****                     }
 684:Generated_Source\PSoC5/USBFS_episr.c ****                 #endif /*  USBFS_EP_MM */
 685:Generated_Source\PSoC5/USBFS_episr.c **** 
 686:Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#START ARB_USER_CODE` Place your code here for handle Buffer Underflow/Overflow
 687:Generated_Source\PSoC5/USBFS_episr.c **** 
 688:Generated_Source\PSoC5/USBFS_episr.c ****                 /* `#END` */
 689:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 18


 690:Generated_Source\PSoC5/USBFS_episr.c ****                 CY_SET_REG8((reg8 *)(USBFS_ARB_EP1_SR_IND + ptr), ep_status);   /* Clear Serviced e
 281              		.loc 1 690 0
 282 00e4 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 283 00e6 0C4B     		ldr	r3, .L13+4
 284 00e8 1344     		add	r3, r3, r2
 285 00ea 1A46     		mov	r2, r3
 286 00ec 3B79     		ldrb	r3, [r7, #4]
 287 00ee 1370     		strb	r3, [r2]
 288              	.L9:
 691:Generated_Source\PSoC5/USBFS_episr.c ****             }
 692:Generated_Source\PSoC5/USBFS_episr.c ****             ptr += USBFS_EPX_CNTX_ADDR_OFFSET;               /* prepare pointer for next EP */
 289              		.loc 1 692 0
 290 00f0 7B79     		ldrb	r3, [r7, #5]
 291 00f2 1033     		adds	r3, r3, #16
 292 00f4 7B71     		strb	r3, [r7, #5]
 693:Generated_Source\PSoC5/USBFS_episr.c ****             ep++;
 293              		.loc 1 693 0
 294 00f6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 295 00f8 0133     		adds	r3, r3, #1
 296 00fa BB71     		strb	r3, [r7, #6]
 694:Generated_Source\PSoC5/USBFS_episr.c ****             int_status >>= 1u;
 297              		.loc 1 694 0
 298 00fc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 299 00fe 5B08     		lsrs	r3, r3, #1
 300 0100 FB71     		strb	r3, [r7, #7]
 301              	.L8:
 637:Generated_Source\PSoC5/USBFS_episr.c ****         {
 302              		.loc 1 637 0
 303 0102 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 304 0104 002B     		cmp	r3, #0
 305 0106 89D1     		bne	.L12
 695:Generated_Source\PSoC5/USBFS_episr.c ****         }
 696:Generated_Source\PSoC5/USBFS_episr.c **** 
 697:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START ARB_END_USER_CODE` Place your code here */
 698:Generated_Source\PSoC5/USBFS_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 700:Generated_Source\PSoC5/USBFS_episr.c ****     }
 306              		.loc 1 700 0
 307 0108 0C37     		adds	r7, r7, #12
 308              		.cfi_def_cfa_offset 4
 309 010a BD46     		mov	sp, r7
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 010c 5DF8047B 		ldr	r7, [sp], #4
 313              		.cfi_restore 7
 314              		.cfi_def_cfa_offset 0
 315 0110 7047     		bx	lr
 316              	.L14:
 317 0112 00BF     		.align	2
 318              	.L13:
 319 0114 9F600040 		.word	1073766559
 320 0118 82600040 		.word	1073766530
 321 011c 00000000 		.word	USBFS_EP
 322 0120 0E600040 		.word	1073766414
 323              		.cfi_endproc
 324              	.LFE3:
 325              		.size	USBFS_ARB_ISR, .-USBFS_ARB_ISR
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 19


 326              		.text
 327              	.Letext0:
 328              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 329              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
 330              		.file 4 "Generated_Source\\PSoC5\\USBFS_pvt.h"
 331              		.section	.debug_info,"",%progbits
 332              	.Ldebug_info0:
 333 0000 D1010000 		.4byte	0x1d1
 334 0004 0400     		.2byte	0x4
 335 0006 00000000 		.4byte	.Ldebug_abbrev0
 336 000a 04       		.byte	0x4
 337 000b 01       		.uleb128 0x1
 338 000c 57010000 		.4byte	.LASF31
 339 0010 01       		.byte	0x1
 340 0011 28000000 		.4byte	.LASF32
 341 0015 93000000 		.4byte	.LASF33
 342 0019 00000000 		.4byte	.Ldebug_ranges0+0
 343 001d 00000000 		.4byte	0
 344 0021 00000000 		.4byte	.Ldebug_line0
 345 0025 02       		.uleb128 0x2
 346 0026 01       		.byte	0x1
 347 0027 06       		.byte	0x6
 348 0028 22020000 		.4byte	.LASF0
 349 002c 02       		.uleb128 0x2
 350 002d 01       		.byte	0x1
 351 002e 08       		.byte	0x8
 352 002f 85000000 		.4byte	.LASF1
 353 0033 02       		.uleb128 0x2
 354 0034 02       		.byte	0x2
 355 0035 05       		.byte	0x5
 356 0036 F0010000 		.4byte	.LASF2
 357 003a 02       		.uleb128 0x2
 358 003b 02       		.byte	0x2
 359 003c 07       		.byte	0x7
 360 003d 0B000000 		.4byte	.LASF3
 361 0041 02       		.uleb128 0x2
 362 0042 04       		.byte	0x4
 363 0043 05       		.byte	0x5
 364 0044 0A020000 		.4byte	.LASF4
 365 0048 02       		.uleb128 0x2
 366 0049 04       		.byte	0x4
 367 004a 07       		.byte	0x7
 368 004b A8000000 		.4byte	.LASF5
 369 004f 02       		.uleb128 0x2
 370 0050 08       		.byte	0x8
 371 0051 05       		.byte	0x5
 372 0052 44010000 		.4byte	.LASF6
 373 0056 02       		.uleb128 0x2
 374 0057 08       		.byte	0x8
 375 0058 07       		.byte	0x7
 376 0059 0E010000 		.4byte	.LASF7
 377 005d 03       		.uleb128 0x3
 378 005e 04       		.byte	0x4
 379 005f 05       		.byte	0x5
 380 0060 696E7400 		.ascii	"int\000"
 381 0064 02       		.uleb128 0x2
 382 0065 04       		.byte	0x4
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 20


 383 0066 07       		.byte	0x7
 384 0067 01010000 		.4byte	.LASF8
 385 006b 04       		.uleb128 0x4
 386 006c FA010000 		.4byte	.LASF9
 387 0070 02       		.byte	0x2
 388 0071 5B       		.byte	0x5b
 389 0072 2C000000 		.4byte	0x2c
 390 0076 04       		.uleb128 0x4
 391 0077 EF000000 		.4byte	.LASF10
 392 007b 02       		.byte	0x2
 393 007c 5C       		.byte	0x5c
 394 007d 3A000000 		.4byte	0x3a
 395 0081 02       		.uleb128 0x2
 396 0082 04       		.byte	0x4
 397 0083 04       		.byte	0x4
 398 0084 76000000 		.4byte	.LASF11
 399 0088 02       		.uleb128 0x2
 400 0089 08       		.byte	0x8
 401 008a 04       		.byte	0x4
 402 008b D6000000 		.4byte	.LASF12
 403 008f 02       		.uleb128 0x2
 404 0090 01       		.byte	0x1
 405 0091 08       		.byte	0x8
 406 0092 52010000 		.4byte	.LASF13
 407 0096 04       		.uleb128 0x4
 408 0097 2F010000 		.4byte	.LASF14
 409 009b 02       		.byte	0x2
 410 009c F0       		.byte	0xf0
 411 009d A1000000 		.4byte	0xa1
 412 00a1 05       		.uleb128 0x5
 413 00a2 6B000000 		.4byte	0x6b
 414 00a6 02       		.uleb128 0x2
 415 00a7 04       		.byte	0x4
 416 00a8 07       		.byte	0x7
 417 00a9 34010000 		.4byte	.LASF15
 418 00ad 06       		.uleb128 0x6
 419 00ae 0C       		.byte	0xc
 420 00af 03       		.byte	0x3
 421 00b0 78       		.byte	0x78
 422 00b1 22010000 		.4byte	0x122
 423 00b5 07       		.uleb128 0x7
 424 00b6 DD000000 		.4byte	.LASF16
 425 00ba 03       		.byte	0x3
 426 00bb 7A       		.byte	0x7a
 427 00bc 6B000000 		.4byte	0x6b
 428 00c0 00       		.byte	0
 429 00c1 07       		.uleb128 0x7
 430 00c2 F6000000 		.4byte	.LASF17
 431 00c6 03       		.byte	0x3
 432 00c7 7B       		.byte	0x7b
 433 00c8 6B000000 		.4byte	0x6b
 434 00cc 01       		.byte	0x1
 435 00cd 07       		.uleb128 0x7
 436 00ce 25010000 		.4byte	.LASF18
 437 00d2 03       		.byte	0x3
 438 00d3 7C       		.byte	0x7c
 439 00d4 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 21


 440 00d8 02       		.byte	0x2
 441 00d9 07       		.uleb128 0x7
 442 00da 7C000000 		.4byte	.LASF19
 443 00de 03       		.byte	0x3
 444 00df 7D       		.byte	0x7d
 445 00e0 6B000000 		.4byte	0x6b
 446 00e4 03       		.byte	0x3
 447 00e5 07       		.uleb128 0x7
 448 00e6 BA000000 		.4byte	.LASF20
 449 00ea 03       		.byte	0x3
 450 00eb 7E       		.byte	0x7e
 451 00ec 6B000000 		.4byte	0x6b
 452 00f0 04       		.byte	0x4
 453 00f1 07       		.uleb128 0x7
 454 00f2 3D010000 		.4byte	.LASF21
 455 00f6 03       		.byte	0x3
 456 00f7 7F       		.byte	0x7f
 457 00f8 6B000000 		.4byte	0x6b
 458 00fc 05       		.byte	0x5
 459 00fd 07       		.uleb128 0x7
 460 00fe E4000000 		.4byte	.LASF22
 461 0102 03       		.byte	0x3
 462 0103 80       		.byte	0x80
 463 0104 76000000 		.4byte	0x76
 464 0108 06       		.byte	0x6
 465 0109 07       		.uleb128 0x7
 466 010a E5010000 		.4byte	.LASF23
 467 010e 03       		.byte	0x3
 468 010f 81       		.byte	0x81
 469 0110 76000000 		.4byte	0x76
 470 0114 08       		.byte	0x8
 471 0115 07       		.uleb128 0x7
 472 0116 00020000 		.4byte	.LASF24
 473 011a 03       		.byte	0x3
 474 011b 82       		.byte	0x82
 475 011c 6B000000 		.4byte	0x6b
 476 0120 0A       		.byte	0xa
 477 0121 00       		.byte	0
 478 0122 04       		.uleb128 0x4
 479 0123 4D000000 		.4byte	.LASF25
 480 0127 03       		.byte	0x3
 481 0128 83       		.byte	0x83
 482 0129 AD000000 		.4byte	0xad
 483 012d 08       		.uleb128 0x8
 484 012e 13020000 		.4byte	.LASF26
 485 0132 01       		.byte	0x1
 486 0133 76       		.byte	0x76
 487 0134 00000000 		.4byte	.LFB0
 488 0138 54000000 		.4byte	.LFE0-.LFB0
 489 013c 01       		.uleb128 0x1
 490 013d 9C       		.byte	0x9c
 491 013e 09       		.uleb128 0x9
 492 013f BF000000 		.4byte	.LASF27
 493 0143 01       		.byte	0x1
 494 0144 3A02     		.2byte	0x23a
 495 0146 00000000 		.4byte	.LFB1
 496 014a 0C000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 22


 497 014e 01       		.uleb128 0x1
 498 014f 9C       		.byte	0x9c
 499 0150 0A       		.uleb128 0xa
 500 0151 62000000 		.4byte	.LASF28
 501 0155 01       		.byte	0x1
 502 0156 5102     		.2byte	0x251
 503 0158 00000000 		.4byte	.LFB2
 504 015c 0A000000 		.4byte	.LFE2-.LFB2
 505 0160 01       		.uleb128 0x1
 506 0161 9C       		.byte	0x9c
 507 0162 0B       		.uleb128 0xb
 508 0163 2E020000 		.4byte	.LASF34
 509 0167 01       		.byte	0x1
 510 0168 6F02     		.2byte	0x26f
 511 016a 00000000 		.4byte	.LFB3
 512 016e 24010000 		.4byte	.LFE3-.LFB3
 513 0172 01       		.uleb128 0x1
 514 0173 9C       		.byte	0x9c
 515 0174 B4010000 		.4byte	0x1b4
 516 0178 0C       		.uleb128 0xc
 517 0179 00000000 		.4byte	.LASF29
 518 017d 01       		.byte	0x1
 519 017e 7102     		.2byte	0x271
 520 0180 6B000000 		.4byte	0x6b
 521 0184 02       		.uleb128 0x2
 522 0185 91       		.byte	0x91
 523 0186 77       		.sleb128 -9
 524 0187 0C       		.uleb128 0xc
 525 0188 1E000000 		.4byte	.LASF30
 526 018c 01       		.byte	0x1
 527 018d 7202     		.2byte	0x272
 528 018f 6B000000 		.4byte	0x6b
 529 0193 02       		.uleb128 0x2
 530 0194 91       		.byte	0x91
 531 0195 74       		.sleb128 -12
 532 0196 0D       		.uleb128 0xd
 533 0197 657000   		.ascii	"ep\000"
 534 019a 01       		.byte	0x1
 535 019b 7302     		.2byte	0x273
 536 019d 6B000000 		.4byte	0x6b
 537 01a1 02       		.uleb128 0x2
 538 01a2 91       		.byte	0x91
 539 01a3 76       		.sleb128 -10
 540 01a4 0D       		.uleb128 0xd
 541 01a5 70747200 		.ascii	"ptr\000"
 542 01a9 01       		.byte	0x1
 543 01aa 7402     		.2byte	0x274
 544 01ac 6B000000 		.4byte	0x6b
 545 01b0 02       		.uleb128 0x2
 546 01b1 91       		.byte	0x91
 547 01b2 75       		.sleb128 -11
 548 01b3 00       		.byte	0
 549 01b4 0E       		.uleb128 0xe
 550 01b5 22010000 		.4byte	0x122
 551 01b9 C4010000 		.4byte	0x1c4
 552 01bd 0F       		.uleb128 0xf
 553 01be A6000000 		.4byte	0xa6
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 23


 554 01c2 08       		.byte	0x8
 555 01c3 00       		.byte	0
 556 01c4 10       		.uleb128 0x10
 557 01c5 CD000000 		.4byte	.LASF35
 558 01c9 04       		.byte	0x4
 559 01ca 33       		.byte	0x33
 560 01cb CF010000 		.4byte	0x1cf
 561 01cf 05       		.uleb128 0x5
 562 01d0 B4010000 		.4byte	0x1b4
 563 01d4 00       		.byte	0
 564              		.section	.debug_abbrev,"",%progbits
 565              	.Ldebug_abbrev0:
 566 0000 01       		.uleb128 0x1
 567 0001 11       		.uleb128 0x11
 568 0002 01       		.byte	0x1
 569 0003 25       		.uleb128 0x25
 570 0004 0E       		.uleb128 0xe
 571 0005 13       		.uleb128 0x13
 572 0006 0B       		.uleb128 0xb
 573 0007 03       		.uleb128 0x3
 574 0008 0E       		.uleb128 0xe
 575 0009 1B       		.uleb128 0x1b
 576 000a 0E       		.uleb128 0xe
 577 000b 55       		.uleb128 0x55
 578 000c 17       		.uleb128 0x17
 579 000d 11       		.uleb128 0x11
 580 000e 01       		.uleb128 0x1
 581 000f 10       		.uleb128 0x10
 582 0010 17       		.uleb128 0x17
 583 0011 00       		.byte	0
 584 0012 00       		.byte	0
 585 0013 02       		.uleb128 0x2
 586 0014 24       		.uleb128 0x24
 587 0015 00       		.byte	0
 588 0016 0B       		.uleb128 0xb
 589 0017 0B       		.uleb128 0xb
 590 0018 3E       		.uleb128 0x3e
 591 0019 0B       		.uleb128 0xb
 592 001a 03       		.uleb128 0x3
 593 001b 0E       		.uleb128 0xe
 594 001c 00       		.byte	0
 595 001d 00       		.byte	0
 596 001e 03       		.uleb128 0x3
 597 001f 24       		.uleb128 0x24
 598 0020 00       		.byte	0
 599 0021 0B       		.uleb128 0xb
 600 0022 0B       		.uleb128 0xb
 601 0023 3E       		.uleb128 0x3e
 602 0024 0B       		.uleb128 0xb
 603 0025 03       		.uleb128 0x3
 604 0026 08       		.uleb128 0x8
 605 0027 00       		.byte	0
 606 0028 00       		.byte	0
 607 0029 04       		.uleb128 0x4
 608 002a 16       		.uleb128 0x16
 609 002b 00       		.byte	0
 610 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 24


 611 002d 0E       		.uleb128 0xe
 612 002e 3A       		.uleb128 0x3a
 613 002f 0B       		.uleb128 0xb
 614 0030 3B       		.uleb128 0x3b
 615 0031 0B       		.uleb128 0xb
 616 0032 49       		.uleb128 0x49
 617 0033 13       		.uleb128 0x13
 618 0034 00       		.byte	0
 619 0035 00       		.byte	0
 620 0036 05       		.uleb128 0x5
 621 0037 35       		.uleb128 0x35
 622 0038 00       		.byte	0
 623 0039 49       		.uleb128 0x49
 624 003a 13       		.uleb128 0x13
 625 003b 00       		.byte	0
 626 003c 00       		.byte	0
 627 003d 06       		.uleb128 0x6
 628 003e 13       		.uleb128 0x13
 629 003f 01       		.byte	0x1
 630 0040 0B       		.uleb128 0xb
 631 0041 0B       		.uleb128 0xb
 632 0042 3A       		.uleb128 0x3a
 633 0043 0B       		.uleb128 0xb
 634 0044 3B       		.uleb128 0x3b
 635 0045 0B       		.uleb128 0xb
 636 0046 01       		.uleb128 0x1
 637 0047 13       		.uleb128 0x13
 638 0048 00       		.byte	0
 639 0049 00       		.byte	0
 640 004a 07       		.uleb128 0x7
 641 004b 0D       		.uleb128 0xd
 642 004c 00       		.byte	0
 643 004d 03       		.uleb128 0x3
 644 004e 0E       		.uleb128 0xe
 645 004f 3A       		.uleb128 0x3a
 646 0050 0B       		.uleb128 0xb
 647 0051 3B       		.uleb128 0x3b
 648 0052 0B       		.uleb128 0xb
 649 0053 49       		.uleb128 0x49
 650 0054 13       		.uleb128 0x13
 651 0055 38       		.uleb128 0x38
 652 0056 0B       		.uleb128 0xb
 653 0057 00       		.byte	0
 654 0058 00       		.byte	0
 655 0059 08       		.uleb128 0x8
 656 005a 2E       		.uleb128 0x2e
 657 005b 00       		.byte	0
 658 005c 3F       		.uleb128 0x3f
 659 005d 19       		.uleb128 0x19
 660 005e 03       		.uleb128 0x3
 661 005f 0E       		.uleb128 0xe
 662 0060 3A       		.uleb128 0x3a
 663 0061 0B       		.uleb128 0xb
 664 0062 3B       		.uleb128 0x3b
 665 0063 0B       		.uleb128 0xb
 666 0064 27       		.uleb128 0x27
 667 0065 19       		.uleb128 0x19
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 25


 668 0066 11       		.uleb128 0x11
 669 0067 01       		.uleb128 0x1
 670 0068 12       		.uleb128 0x12
 671 0069 06       		.uleb128 0x6
 672 006a 40       		.uleb128 0x40
 673 006b 18       		.uleb128 0x18
 674 006c 9742     		.uleb128 0x2117
 675 006e 19       		.uleb128 0x19
 676 006f 00       		.byte	0
 677 0070 00       		.byte	0
 678 0071 09       		.uleb128 0x9
 679 0072 2E       		.uleb128 0x2e
 680 0073 00       		.byte	0
 681 0074 3F       		.uleb128 0x3f
 682 0075 19       		.uleb128 0x19
 683 0076 03       		.uleb128 0x3
 684 0077 0E       		.uleb128 0xe
 685 0078 3A       		.uleb128 0x3a
 686 0079 0B       		.uleb128 0xb
 687 007a 3B       		.uleb128 0x3b
 688 007b 05       		.uleb128 0x5
 689 007c 27       		.uleb128 0x27
 690 007d 19       		.uleb128 0x19
 691 007e 11       		.uleb128 0x11
 692 007f 01       		.uleb128 0x1
 693 0080 12       		.uleb128 0x12
 694 0081 06       		.uleb128 0x6
 695 0082 40       		.uleb128 0x40
 696 0083 18       		.uleb128 0x18
 697 0084 9742     		.uleb128 0x2117
 698 0086 19       		.uleb128 0x19
 699 0087 00       		.byte	0
 700 0088 00       		.byte	0
 701 0089 0A       		.uleb128 0xa
 702 008a 2E       		.uleb128 0x2e
 703 008b 00       		.byte	0
 704 008c 3F       		.uleb128 0x3f
 705 008d 19       		.uleb128 0x19
 706 008e 03       		.uleb128 0x3
 707 008f 0E       		.uleb128 0xe
 708 0090 3A       		.uleb128 0x3a
 709 0091 0B       		.uleb128 0xb
 710 0092 3B       		.uleb128 0x3b
 711 0093 05       		.uleb128 0x5
 712 0094 27       		.uleb128 0x27
 713 0095 19       		.uleb128 0x19
 714 0096 11       		.uleb128 0x11
 715 0097 01       		.uleb128 0x1
 716 0098 12       		.uleb128 0x12
 717 0099 06       		.uleb128 0x6
 718 009a 40       		.uleb128 0x40
 719 009b 18       		.uleb128 0x18
 720 009c 9642     		.uleb128 0x2116
 721 009e 19       		.uleb128 0x19
 722 009f 00       		.byte	0
 723 00a0 00       		.byte	0
 724 00a1 0B       		.uleb128 0xb
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 26


 725 00a2 2E       		.uleb128 0x2e
 726 00a3 01       		.byte	0x1
 727 00a4 3F       		.uleb128 0x3f
 728 00a5 19       		.uleb128 0x19
 729 00a6 03       		.uleb128 0x3
 730 00a7 0E       		.uleb128 0xe
 731 00a8 3A       		.uleb128 0x3a
 732 00a9 0B       		.uleb128 0xb
 733 00aa 3B       		.uleb128 0x3b
 734 00ab 05       		.uleb128 0x5
 735 00ac 27       		.uleb128 0x27
 736 00ad 19       		.uleb128 0x19
 737 00ae 11       		.uleb128 0x11
 738 00af 01       		.uleb128 0x1
 739 00b0 12       		.uleb128 0x12
 740 00b1 06       		.uleb128 0x6
 741 00b2 40       		.uleb128 0x40
 742 00b3 18       		.uleb128 0x18
 743 00b4 9742     		.uleb128 0x2117
 744 00b6 19       		.uleb128 0x19
 745 00b7 01       		.uleb128 0x1
 746 00b8 13       		.uleb128 0x13
 747 00b9 00       		.byte	0
 748 00ba 00       		.byte	0
 749 00bb 0C       		.uleb128 0xc
 750 00bc 34       		.uleb128 0x34
 751 00bd 00       		.byte	0
 752 00be 03       		.uleb128 0x3
 753 00bf 0E       		.uleb128 0xe
 754 00c0 3A       		.uleb128 0x3a
 755 00c1 0B       		.uleb128 0xb
 756 00c2 3B       		.uleb128 0x3b
 757 00c3 05       		.uleb128 0x5
 758 00c4 49       		.uleb128 0x49
 759 00c5 13       		.uleb128 0x13
 760 00c6 02       		.uleb128 0x2
 761 00c7 18       		.uleb128 0x18
 762 00c8 00       		.byte	0
 763 00c9 00       		.byte	0
 764 00ca 0D       		.uleb128 0xd
 765 00cb 34       		.uleb128 0x34
 766 00cc 00       		.byte	0
 767 00cd 03       		.uleb128 0x3
 768 00ce 08       		.uleb128 0x8
 769 00cf 3A       		.uleb128 0x3a
 770 00d0 0B       		.uleb128 0xb
 771 00d1 3B       		.uleb128 0x3b
 772 00d2 05       		.uleb128 0x5
 773 00d3 49       		.uleb128 0x49
 774 00d4 13       		.uleb128 0x13
 775 00d5 02       		.uleb128 0x2
 776 00d6 18       		.uleb128 0x18
 777 00d7 00       		.byte	0
 778 00d8 00       		.byte	0
 779 00d9 0E       		.uleb128 0xe
 780 00da 01       		.uleb128 0x1
 781 00db 01       		.byte	0x1
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 27


 782 00dc 49       		.uleb128 0x49
 783 00dd 13       		.uleb128 0x13
 784 00de 01       		.uleb128 0x1
 785 00df 13       		.uleb128 0x13
 786 00e0 00       		.byte	0
 787 00e1 00       		.byte	0
 788 00e2 0F       		.uleb128 0xf
 789 00e3 21       		.uleb128 0x21
 790 00e4 00       		.byte	0
 791 00e5 49       		.uleb128 0x49
 792 00e6 13       		.uleb128 0x13
 793 00e7 2F       		.uleb128 0x2f
 794 00e8 0B       		.uleb128 0xb
 795 00e9 00       		.byte	0
 796 00ea 00       		.byte	0
 797 00eb 10       		.uleb128 0x10
 798 00ec 34       		.uleb128 0x34
 799 00ed 00       		.byte	0
 800 00ee 03       		.uleb128 0x3
 801 00ef 0E       		.uleb128 0xe
 802 00f0 3A       		.uleb128 0x3a
 803 00f1 0B       		.uleb128 0xb
 804 00f2 3B       		.uleb128 0x3b
 805 00f3 0B       		.uleb128 0xb
 806 00f4 49       		.uleb128 0x49
 807 00f5 13       		.uleb128 0x13
 808 00f6 3F       		.uleb128 0x3f
 809 00f7 19       		.uleb128 0x19
 810 00f8 3C       		.uleb128 0x3c
 811 00f9 19       		.uleb128 0x19
 812 00fa 00       		.byte	0
 813 00fb 00       		.byte	0
 814 00fc 00       		.byte	0
 815              		.section	.debug_aranges,"",%progbits
 816 0000 34000000 		.4byte	0x34
 817 0004 0200     		.2byte	0x2
 818 0006 00000000 		.4byte	.Ldebug_info0
 819 000a 04       		.byte	0x4
 820 000b 00       		.byte	0
 821 000c 0000     		.2byte	0
 822 000e 0000     		.2byte	0
 823 0010 00000000 		.4byte	.LFB0
 824 0014 54000000 		.4byte	.LFE0-.LFB0
 825 0018 00000000 		.4byte	.LFB1
 826 001c 0C000000 		.4byte	.LFE1-.LFB1
 827 0020 00000000 		.4byte	.LFB2
 828 0024 0A000000 		.4byte	.LFE2-.LFB2
 829 0028 00000000 		.4byte	.LFB3
 830 002c 24010000 		.4byte	.LFE3-.LFB3
 831 0030 00000000 		.4byte	0
 832 0034 00000000 		.4byte	0
 833              		.section	.debug_ranges,"",%progbits
 834              	.Ldebug_ranges0:
 835 0000 00000000 		.4byte	.LFB0
 836 0004 54000000 		.4byte	.LFE0
 837 0008 00000000 		.4byte	.LFB1
 838 000c 0C000000 		.4byte	.LFE1
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 28


 839 0010 00000000 		.4byte	.LFB2
 840 0014 0A000000 		.4byte	.LFE2
 841 0018 00000000 		.4byte	.LFB3
 842 001c 24010000 		.4byte	.LFE3
 843 0020 00000000 		.4byte	0
 844 0024 00000000 		.4byte	0
 845              		.section	.debug_line,"",%progbits
 846              	.Ldebug_line0:
 847 0000 D5000000 		.section	.debug_str,"MS",%progbits,1
 847      02006200 
 847      00000201 
 847      FB0E0D00 
 847      01010101 
 848              	.LASF29:
 849 0000 696E745F 		.ascii	"int_status\000"
 849      73746174 
 849      757300
 850              	.LASF3:
 851 000b 73686F72 		.ascii	"short unsigned int\000"
 851      7420756E 
 851      7369676E 
 851      65642069 
 851      6E7400
 852              	.LASF30:
 853 001e 65705F73 		.ascii	"ep_status\000"
 853      74617475 
 853      7300
 854              	.LASF32:
 855 0028 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_episr.c\000"
 855      72617465 
 855      645F536F 
 855      75726365 
 855      5C50536F 
 856              	.LASF25:
 857 004d 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 857      4246535F 
 857      45505F43 
 857      544C5F42 
 857      4C4F434B 
 858              	.LASF28:
 859 0062 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 859      535F4255 
 859      535F5245 
 859      5345545F 
 859      49535200 
 860              	.LASF11:
 861 0076 666C6F61 		.ascii	"float\000"
 861      7400
 862              	.LASF19:
 863 007c 6570546F 		.ascii	"epToggle\000"
 863      67676C65 
 863      00
 864              	.LASF1:
 865 0085 756E7369 		.ascii	"unsigned char\000"
 865      676E6564 
 865      20636861 
 865      7200
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 29


 866              	.LASF33:
 867 0093 433A5C53 		.ascii	"C:\\SoundSystem.cydsn\000"
 867      6F756E64 
 867      53797374 
 867      656D2E63 
 867      7964736E 
 868              	.LASF5:
 869 00a8 6C6F6E67 		.ascii	"long unsigned int\000"
 869      20756E73 
 869      69676E65 
 869      6420696E 
 869      7400
 870              	.LASF20:
 871 00ba 61646472 		.ascii	"addr\000"
 871      00
 872              	.LASF27:
 873 00bf 55534246 		.ascii	"USBFS_SOF_ISR\000"
 873      535F534F 
 873      465F4953 
 873      5200
 874              	.LASF35:
 875 00cd 55534246 		.ascii	"USBFS_EP\000"
 875      535F4550 
 875      00
 876              	.LASF12:
 877 00d6 646F7562 		.ascii	"double\000"
 877      6C6500
 878              	.LASF16:
 879 00dd 61747472 		.ascii	"attrib\000"
 879      696200
 880              	.LASF22:
 881 00e4 62756666 		.ascii	"buffOffset\000"
 881      4F666673 
 881      657400
 882              	.LASF10:
 883 00ef 75696E74 		.ascii	"uint16\000"
 883      313600
 884              	.LASF17:
 885 00f6 61706945 		.ascii	"apiEpState\000"
 885      70537461 
 885      746500
 886              	.LASF8:
 887 0101 756E7369 		.ascii	"unsigned int\000"
 887      676E6564 
 887      20696E74 
 887      00
 888              	.LASF7:
 889 010e 6C6F6E67 		.ascii	"long long unsigned int\000"
 889      206C6F6E 
 889      6720756E 
 889      7369676E 
 889      65642069 
 890              	.LASF18:
 891 0125 68774570 		.ascii	"hwEpState\000"
 891      53746174 
 891      6500
 892              	.LASF14:
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 30


 893 012f 72656738 		.ascii	"reg8\000"
 893      00
 894              	.LASF15:
 895 0134 73697A65 		.ascii	"sizetype\000"
 895      74797065 
 895      00
 896              	.LASF21:
 897 013d 65704D6F 		.ascii	"epMode\000"
 897      646500
 898              	.LASF6:
 899 0144 6C6F6E67 		.ascii	"long long int\000"
 899      206C6F6E 
 899      6720696E 
 899      7400
 900              	.LASF13:
 901 0152 63686172 		.ascii	"char\000"
 901      00
 902              	.LASF31:
 903 0157 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 903      4320342E 
 903      392E3320 
 903      32303135 
 903      30333033 
 904 018a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 904      20726576 
 904      6973696F 
 904      6E203232 
 904      31323230 
 905 01bd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 905      66756E63 
 905      74696F6E 
 905      2D736563 
 905      74696F6E 
 906              	.LASF23:
 907 01e5 62756666 		.ascii	"bufferSize\000"
 907      65725369 
 907      7A6500
 908              	.LASF2:
 909 01f0 73686F72 		.ascii	"short int\000"
 909      7420696E 
 909      7400
 910              	.LASF9:
 911 01fa 75696E74 		.ascii	"uint8\000"
 911      3800
 912              	.LASF24:
 913 0200 696E7465 		.ascii	"interface\000"
 913      72666163 
 913      6500
 914              	.LASF4:
 915 020a 6C6F6E67 		.ascii	"long int\000"
 915      20696E74 
 915      00
 916              	.LASF26:
 917 0213 55534246 		.ascii	"USBFS_EP_2_ISR\000"
 917      535F4550 
 917      5F325F49 
 917      535200
ARM GAS  C:\Users\JOSANT~1\AppData\Local\Temp\ccLNAKh1.s 			page 31


 918              	.LASF0:
 919 0222 7369676E 		.ascii	"signed char\000"
 919      65642063 
 919      68617200 
 920              	.LASF34:
 921 022e 55534246 		.ascii	"USBFS_ARB_ISR\000"
 921      535F4152 
 921      425F4953 
 921      5200
 922              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
