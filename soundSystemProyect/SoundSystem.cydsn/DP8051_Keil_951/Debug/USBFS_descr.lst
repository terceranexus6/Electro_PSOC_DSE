C51 COMPILER V9.51   USBFS_DESCR                                                           05/19/2017 11:21:14 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBFS_DESCR
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\USBFS_descr.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -Generated_Source\PSoC3\USBFS_descr.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) P
                    -R(.\DP8051_Keil_951\Debug/USBFS_descr.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\USBFS_descr.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBFS_descr.c
   3          * Version 2.70
   4          *
   5          * Description:
   6          *  USB descriptors and storage.
   7          *
   8          *  Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "USBFS.h"
  18          #include "USBFS_pvt.h"
  19          
  20          
  21          /*****************************************************************************
  22          *  User supplied descriptors.  If you want to specify your own descriptors,
  23          *  define USER_SUPPLIED_DESCRIPTORS below and add your descriptors.
  24          *****************************************************************************/
  25          /* `#START USER_DESCRIPTORS_DECLARATIONS` Place your declaration here */
  26          
  27          /* `#END` */
  28          
  29          
  30          /***************************************
  31          *  USB Customizer Generated Descriptors
  32          ***************************************/
  33          
  34          #if !defined(USER_SUPPLIED_DESCRIPTORS)
  35          /*********************************************************************
  36          * Device Descriptors
  37          *********************************************************************/
  38          const uint8 CYCODE USBFS_DEVICE0_DESCR[18u] = {
  39          /* Descriptor Length                       */ 0x12u,
  40          /* DescriptorType: DEVICE                  */ 0x01u,
  41          /* bcdUSB (ver 2.0)                        */ 0x00u, 0x02u,
  42          /* bDeviceClass                            */ 0x00u,
  43          /* bDeviceSubClass                         */ 0x00u,
  44          /* bDeviceProtocol                         */ 0x00u,
  45          /* bMaxPacketSize0                         */ 0x08u,
  46          /* idVendor                                */ 0xB4u, 0x04u,
  47          /* idProduct                               */ 0x01u, 0x20u,
  48          /* bcdDevice                               */ 0x00u, 0x00u,
  49          /* iManufacturer                           */ 0x05u,
  50          /* iProduct                                */ 0x06u,
  51          /* iSerialNumber                           */ 0x00u,
  52          /* bNumConfigurations                      */ 0x01u
  53          };
C51 COMPILER V9.51   USBFS_DESCR                                                           05/19/2017 11:21:14 PAGE 2   

  54          /*********************************************************************
  55          * Config Descriptor  
  56          *********************************************************************/
  57          const uint8 CYCODE USBFS_DEVICE0_CONFIGURATION0_DESCR[103u] = {
  58          /*  Config Descriptor Length               */ 0x09u,
  59          /*  DescriptorType: CONFIG                 */ 0x02u,
  60          /*  wTotalLength                           */ 0x67u, 0x00u,
  61          /*  bNumInterfaces                         */ 0x02u,
  62          /*  bConfigurationValue                    */ 0x01u,
  63          /*  iConfiguration                         */ 0x00u,
  64          /*  bmAttributes                           */ 0xC0u,
  65          /*  bMaxPower                              */ 0x02u,
  66          /*********************************************************************
  67          * AudioControl Interface Descriptor
  68          *********************************************************************/
  69          /*  Interface Descriptor Length            */ 0x09u,
  70          /*  DescriptorType: INTERFACE              */ 0x04u,
  71          /*  bInterfaceNumber                       */ 0x00u,
  72          /*  bAlternateSetting                      */ 0x00u,
  73          /*  bNumEndpoints                          */ 0x00u,
  74          /*  bInterfaceClass                        */ 0x01u,
  75          /*  bInterfaceSubClass                     */ 0x01u,
  76          /*  bInterfaceProtocol                     */ 0x00u,
  77          /*  iInterface                             */ 0x07u,
  78          /*********************************************************************
  79          * AC Header Descriptor
  80          *********************************************************************/
  81          /*  AC Header Descriptor Length            */ 0x09u,
  82          /*  DescriptorType: AUDIO                  */ 0x24u,
  83          /*  bDescriptorSubtype                     */ 0x01u,
  84          /*  bcdADC                                 */ 0x00u, 0x01u,
  85          /*  wTotalLength                           */ 0x1Eu, 0x00u,
  86          /*  bInCollection                          */ 0x01u,
  87          /*  baInterfaceNr                          */ 0x01u,
  88          /*********************************************************************
  89          * AC Input Terminal Descriptor
  90          *********************************************************************/
  91          /*  AC Input Terminal Descriptor Length    */ 0x0Cu,
  92          /*  DescriptorType: AUDIO                  */ 0x24u,
  93          /*  bDescriptorSubtype                     */ 0x02u,
  94          /*  bTerminalID                            */ 0x01u,
  95          /*  wTerminalType                          */ 0x01u, 0x01u,
  96          /*  bAssocTerminal                         */ 0x00u,
  97          /*  bNrChannels                            */ 0x01u,
  98          /*  wChannelConfig                         */ 0x00u, 0x00u,
  99          /*  iChannelNames                          */ 0x00u,
 100          /*  iTerminal                              */ 0x00u,
 101          /*********************************************************************
 102          * AC Output Terminal Descriptor
 103          *********************************************************************/
 104          /*  AC Output Terminal Descriptor Length   */ 0x09u,
 105          /*  DescriptorType: AUDIO                  */ 0x24u,
 106          /*  bDescriptorSubtype                     */ 0x03u,
 107          /*  bTerminalID                            */ 0x02u,
 108          /*  wTerminalType                          */ 0x01u, 0x03u,
 109          /*  bAssocTerminal                         */ 0x00u,
 110          /*  bSourceID                              */ 0x01u,
 111          /*  iTerminal                              */ 0x00u,
 112          /*********************************************************************
 113          * AudioStreaming Interface Descriptor
 114          *********************************************************************/
 115          /*  Interface Descriptor Length            */ 0x09u,
C51 COMPILER V9.51   USBFS_DESCR                                                           05/19/2017 11:21:14 PAGE 3   

 116          /*  DescriptorType: INTERFACE              */ 0x04u,
 117          /*  bInterfaceNumber                       */ 0x01u,
 118          /*  bAlternateSetting                      */ 0x00u,
 119          /*  bNumEndpoints                          */ 0x00u,
 120          /*  bInterfaceClass                        */ 0x01u,
 121          /*  bInterfaceSubClass                     */ 0x02u,
 122          /*  bInterfaceProtocol                     */ 0x00u,
 123          /*  iInterface                             */ 0x08u,
 124          /*********************************************************************
 125          * AudioStreaming Interface Descriptor
 126          *********************************************************************/
 127          /*  Interface Descriptor Length            */ 0x09u,
 128          /*  DescriptorType: INTERFACE              */ 0x04u,
 129          /*  bInterfaceNumber                       */ 0x01u,
 130          /*  bAlternateSetting                      */ 0x01u,
 131          /*  bNumEndpoints                          */ 0x01u,
 132          /*  bInterfaceClass                        */ 0x01u,
 133          /*  bInterfaceSubClass                     */ 0x02u,
 134          /*  bInterfaceProtocol                     */ 0x00u,
 135          /*  iInterface                             */ 0x09u,
 136          /*********************************************************************
 137          * AS General Descriptor
 138          *********************************************************************/
 139          /*  AS General Descriptor Length           */ 0x07u,
 140          /*  DescriptorType: AUDIO                  */ 0x24u,
 141          /*  bDescriptorSubtype                     */ 0x01u,
 142          /*  bTerminalLink                          */ 0x01u,
 143          /*  bDelay                                 */ 0x00u,
 144          /*  wFormatTag                             */ 0x02u, 0x00u,
 145          /*********************************************************************
 146          * AS Format Type I Descriptor
 147          *********************************************************************/
 148          /*  AS Format Type I Descriptor Length     */ 0x0Eu,
 149          /*  DescriptorType: AUDIO                  */ 0x24u,
 150          /*  bDescriptorSubtype                     */ 0x02u,
 151          /*  bFormatType                            */ 0x01u,
 152          /*  bNrChannels                            */ 0x01u,
 153          /*  bSubframeSize                          */ 0x01u,
 154          /*  bBitResolution                         */ 0x08u,
 155          /*  bSamFreqType                           */ 0x00u,
 156          /*  tLowerSamFreq                          */ 0x00u, 0x7Du, 0x00u,
 157          /*  tUpperSamFreq                          */ 0x00u, 0x7Du, 0x00u,
 158          /*********************************************************************
 159          * Endpoint Descriptor
 160          *********************************************************************/
 161          /*  Endpoint Descriptor Length             */ 0x09u,
 162          /*  DescriptorType: ENDPOINT               */ 0x05u,
 163          /*  bEndpointAddress                       */ 0x02u,
 164          /*  bmAttributes                           */ 0x0Du,
 165          /*  wMaxPacketSize                         */ 0xC0u, 0x00u,
 166          /*  bInterval                              */ 0x01u,
 167          /*  bRefresh                               */ 0x00u,
 168          /*  bSynchAddress                          */ 0x00u,
 169          /*********************************************************************
 170          * AS Endpoint Descriptor
 171          *********************************************************************/
 172          /*  Endpoint Descriptor Length             */ 0x07u,
 173          /*  DescriptorType: CS_ENDPOINT            */ 0x25u,
 174          /*  bDescriptorSubtype                     */ 0x01u,
 175          /*  bmAttributes                           */ 0x01u,
 176          /*  bLockDelayUnits                        */ 0x00u,
 177          /*  wLockDelay                             */ 0x00u, 0x00u
C51 COMPILER V9.51   USBFS_DESCR                                                           05/19/2017 11:21:14 PAGE 4   

 178          };
 179          
 180          /*********************************************************************
 181          * String Descriptor Table
 182          *********************************************************************/
 183          const uint8 CYCODE USBFS_STRING_DESCRIPTORS[371u] = {
 184          /*********************************************************************
 185          * Language ID Descriptor
 186          *********************************************************************/
 187          /* Descriptor Length                       */ 0x04u,
 188          /* DescriptorType: STRING                  */ 0x03u,
 189          /* Language Id                             */ 0x09u, 0x04u,
 190          /*********************************************************************
 191          * String Descriptor: "Cypress Semiconductor Corporation"
 192          *********************************************************************/
 193          /* Descriptor Length                       */ 0x44u,
 194          /* DescriptorType: STRING                  */ 0x03u,
 195           (uint8)'C', 0u,(uint8)'y', 0u,(uint8)'p', 0u,(uint8)'r', 0u,(uint8)'e', 0u,
 196           (uint8)'s', 0u,(uint8)'s', 0u,(uint8)' ', 0u,(uint8)'S', 0u,(uint8)'e', 0u,
 197           (uint8)'m', 0u,(uint8)'i', 0u,(uint8)'c', 0u,(uint8)'o', 0u,(uint8)'n', 0u,
 198           (uint8)'d', 0u,(uint8)'u', 0u,(uint8)'c', 0u,(uint8)'t', 0u,(uint8)'o', 0u,
 199           (uint8)'r', 0u,(uint8)' ', 0u,(uint8)'C', 0u,(uint8)'o', 0u,(uint8)'r', 0u,
 200           (uint8)'p', 0u,(uint8)'o', 0u,(uint8)'r', 0u,(uint8)'a', 0u,(uint8)'t', 0u,
 201           (uint8)'i', 0u,(uint8)'o', 0u,(uint8)'n', 0u,
 202          /*********************************************************************
 203          * String Descriptor: "USB Audio Demo"
 204          *********************************************************************/
 205          /* Descriptor Length                       */ 0x1Eu,
 206          /* DescriptorType: STRING                  */ 0x03u,
 207           (uint8)'U', 0u,(uint8)'S', 0u,(uint8)'B', 0u,(uint8)' ', 0u,(uint8)'A', 0u,
 208           (uint8)'u', 0u,(uint8)'d', 0u,(uint8)'i', 0u,(uint8)'o', 0u,(uint8)' ', 0u,
 209           (uint8)'D', 0u,(uint8)'e', 0u,(uint8)'m', 0u,(uint8)'o', 0u,
 210          /*********************************************************************
 211          * String Descriptor: "Control Inerface"
 212          *********************************************************************/
 213          /* Descriptor Length                       */ 0x22u,
 214          /* DescriptorType: STRING                  */ 0x03u,
 215           (uint8)'C', 0u,(uint8)'o', 0u,(uint8)'n', 0u,(uint8)'t', 0u,(uint8)'r', 0u,
 216           (uint8)'o', 0u,(uint8)'l', 0u,(uint8)' ', 0u,(uint8)'I', 0u,(uint8)'n', 0u,
 217           (uint8)'e', 0u,(uint8)'r', 0u,(uint8)'f', 0u,(uint8)'a', 0u,(uint8)'c', 0u,
 218           (uint8)'e', 0u,
 219          /*********************************************************************
 220          * String Descriptor: "Streaming Interface"
 221          *********************************************************************/
 222          /* Descriptor Length                       */ 0x28u,
 223          /* DescriptorType: STRING                  */ 0x03u,
 224           (uint8)'S', 0u,(uint8)'t', 0u,(uint8)'r', 0u,(uint8)'e', 0u,(uint8)'a', 0u,
 225           (uint8)'m', 0u,(uint8)'i', 0u,(uint8)'n', 0u,(uint8)'g', 0u,(uint8)' ', 0u,
 226           (uint8)'I', 0u,(uint8)'n', 0u,(uint8)'t', 0u,(uint8)'e', 0u,(uint8)'r', 0u,
 227           (uint8)'f', 0u,(uint8)'a', 0u,(uint8)'c', 0u,(uint8)'e', 0u,
 228          /*********************************************************************
 229          * String Descriptor: "Cypress Semiconductor"
 230          *********************************************************************/
 231          /* Descriptor Length                       */ 0x2Cu,
 232          /* DescriptorType: STRING                  */ 0x03u,
 233           (uint8)'C', 0u,(uint8)'y', 0u,(uint8)'p', 0u,(uint8)'r', 0u,(uint8)'e', 0u,
 234           (uint8)'s', 0u,(uint8)'s', 0u,(uint8)' ', 0u,(uint8)'S', 0u,(uint8)'e', 0u,
 235           (uint8)'m', 0u,(uint8)'i', 0u,(uint8)'c', 0u,(uint8)'o', 0u,(uint8)'n', 0u,
 236           (uint8)'d', 0u,(uint8)'u', 0u,(uint8)'c', 0u,(uint8)'t', 0u,(uint8)'o', 0u,
 237           (uint8)'r', 0u,
 238          /*********************************************************************
 239          * String Descriptor: "Cypress USB Audio"
C51 COMPILER V9.51   USBFS_DESCR                                                           05/19/2017 11:21:14 PAGE 5   

 240          *********************************************************************/
 241          /* Descriptor Length                       */ 0x24u,
 242          /* DescriptorType: STRING                  */ 0x03u,
 243           (uint8)'C', 0u,(uint8)'y', 0u,(uint8)'p', 0u,(uint8)'r', 0u,(uint8)'e', 0u,
 244           (uint8)'s', 0u,(uint8)'s', 0u,(uint8)' ', 0u,(uint8)'U', 0u,(uint8)'S', 0u,
 245           (uint8)'B', 0u,(uint8)' ', 0u,(uint8)'A', 0u,(uint8)'u', 0u,(uint8)'d', 0u,
 246           (uint8)'i', 0u,(uint8)'o', 0u,
 247          /*********************************************************************
 248          * String Descriptor: "CypressAudioControl"
 249          *********************************************************************/
 250          /* Descriptor Length                       */ 0x28u,
 251          /* DescriptorType: STRING                  */ 0x03u,
 252           (uint8)'C', 0u,(uint8)'y', 0u,(uint8)'p', 0u,(uint8)'r', 0u,(uint8)'e', 0u,
 253           (uint8)'s', 0u,(uint8)'s', 0u,(uint8)'A', 0u,(uint8)'u', 0u,(uint8)'d', 0u,
 254           (uint8)'i', 0u,(uint8)'o', 0u,(uint8)'C', 0u,(uint8)'o', 0u,(uint8)'n', 0u,
 255           (uint8)'t', 0u,(uint8)'r', 0u,(uint8)'o', 0u,(uint8)'l', 0u,
 256          /*********************************************************************
 257          * String Descriptor: "ZeroBandwidth"
 258          *********************************************************************/
 259          /* Descriptor Length                       */ 0x1Cu,
 260          /* DescriptorType: STRING                  */ 0x03u,
 261           (uint8)'Z', 0u,(uint8)'e', 0u,(uint8)'r', 0u,(uint8)'o', 0u,(uint8)'B', 0u,
 262           (uint8)'a', 0u,(uint8)'n', 0u,(uint8)'d', 0u,(uint8)'w', 0u,(uint8)'i', 0u,
 263           (uint8)'d', 0u,(uint8)'t', 0u,(uint8)'h', 0u,
 264          /*********************************************************************
 265          * String Descriptor: "AudioStreaming Speaker"
 266          *********************************************************************/
 267          /* Descriptor Length                       */ 0x2Eu,
 268          /* DescriptorType: STRING                  */ 0x03u,
 269           (uint8)'A', 0u,(uint8)'u', 0u,(uint8)'d', 0u,(uint8)'i', 0u,(uint8)'o', 0u,
 270           (uint8)'S', 0u,(uint8)'t', 0u,(uint8)'r', 0u,(uint8)'e', 0u,(uint8)'a', 0u,
 271           (uint8)'m', 0u,(uint8)'i', 0u,(uint8)'n', 0u,(uint8)'g', 0u,(uint8)' ', 0u,
 272           (uint8)'S', 0u,(uint8)'p', 0u,(uint8)'e', 0u,(uint8)'a', 0u,(uint8)'k', 0u,
 273           (uint8)'e', 0u,(uint8)'r', 0u,
 274          /*********************************************************************/
 275          /* Marks the end of the list.              */ 0x00u};
 276          /*********************************************************************/
 277          
 278          
 279          
 280          
 281          /*********************************************************************
 282          * Endpoint Setting Table -- This table contain the endpoint setting
 283          *                           for each endpoint in the configuration. It
 284          *                           contains the necessary information to
 285          *                           configure the endpoint hardware for each
 286          *                           interface and alternate setting.
 287          *********************************************************************/
 288          const T_USBFS_EP_SETTINGS_BLOCK CYCODE USBFS_DEVICE0_CONFIGURATION0_EP_SETTINGS_TABLE[1u] = {
 289          /* IFC  ALT    EPAddr bmAttr MaxPktSize Class ********************/
 290          {0x01u, 0x01u, 0x02u, 0x0Du, 0x00C0u,   0x01u}
 291          };
 292          const uint8 CYCODE USBFS_DEVICE0_CONFIGURATION0_INTERFACE_CLASS[2u] = {
 293          0x01u, 0x01u, 
 294          };
 295          /*********************************************************************
 296          * Config Dispatch Table -- Points to the Config Descriptor and each of
 297          *                          and endpoint setup table and to each
 298          *                          interface table if it specifies a USB Class
 299          *********************************************************************/
 300          const T_USBFS_LUT CYCODE USBFS_DEVICE0_CONFIGURATION0_TABLE[5u] = {
 301              {0x01u,     &USBFS_DEVICE0_CONFIGURATION0_DESCR},
C51 COMPILER V9.51   USBFS_DESCR                                                           05/19/2017 11:21:14 PAGE 6   

 302              {0x01u,     &USBFS_DEVICE0_CONFIGURATION0_EP_SETTINGS_TABLE},
 303              {0x00u,    NULL},
 304              {0x00u,    NULL},
 305              {0x00u,     &USBFS_DEVICE0_CONFIGURATION0_INTERFACE_CLASS}
 306          };
 307          /*********************************************************************
 308          * Device Dispatch Table -- Points to the Device Descriptor and each of
 309          *                          and Configuration Tables for this Device 
 310          *********************************************************************/
 311          const T_USBFS_LUT CYCODE USBFS_DEVICE0_TABLE[2u] = {
 312              {0x01u,     &USBFS_DEVICE0_DESCR},
 313              {0x01u,     &USBFS_DEVICE0_CONFIGURATION0_TABLE}
 314          };
 315          /*********************************************************************
 316          * Device Table -- Indexed by the device number.
 317          *********************************************************************/
 318          const T_USBFS_LUT CYCODE USBFS_TABLE[1u] = {
 319              {0x01u,     &USBFS_DEVICE0_TABLE}
 320          };
 321          
 322          #endif /* USER_SUPPLIED_DESCRIPTORS */
 323          
 324          #if defined(USBFS_ENABLE_MSOS_STRING)
              
                  /******************************************************************************
                  *  USB Microsoft OS String Descriptor
                  *  "MSFT" identifies a Microsoft host
                  *  "100" specifies version 1.00
                  *  USBFS_GET_EXTENDED_CONFIG_DESCRIPTOR becomes the bRequest value
                  *  in a host vendor device/class request
                  ******************************************************************************/
              
                  const uint8 CYCODE USBFS_MSOS_DESCRIPTOR[USBFS_MSOS_DESCRIPTOR_LENGTH] = {
                  /* Descriptor Length                       */   0x12u,
                  /* DescriptorType: STRING                  */   0x03u,
                  /* qwSignature - "MSFT100"                 */   (uint8)'M', 0u, (uint8)'S', 0u, (uint8)'F', 0u, (uint8
             -)'T', 0u,
                                                                  (uint8)'1', 0u, (uint8)'0', 0u, (uint8)'0', 0u,
                  /* bMS_VendorCode:                         */   USBFS_GET_EXTENDED_CONFIG_DESCRIPTOR,
                  /* bPad                                    */   0x00u
                  };
              
                  /* Extended Configuration Descriptor */
              
                  const uint8 CYCODE USBFS_MSOS_CONFIGURATION_DESCR[USBFS_MSOS_CONF_DESCR_LENGTH] = {
                  /*  Length of the descriptor 4 bytes       */   0x28u, 0x00u, 0x00u, 0x00u,
                  /*  Version of the descriptor 2 bytes      */   0x00u, 0x01u,
                  /*  wIndex - Fixed:INDEX_CONFIG_DESCRIPTOR */   0x04u, 0x00u,
                  /*  bCount - Count of device functions.    */   0x01u,
                  /*  Reserved : 7 bytes                     */   0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u,
                  /*  bFirstInterfaceNumber                  */   0x00u,
                  /*  Reserved                               */   0x01u,
                  /*  compatibleID    - "CYUSB\0\0"          */   (uint8)'C', (uint8)'Y', (uint8)'U', (uint8)'S', (uint8
             -)'B',
                                                                  0x00u, 0x00u, 0x00u,
                  /*  subcompatibleID - "00001\0\0"          */   (uint8)'0', (uint8)'0', (uint8)'0', (uint8)'0', (uint8
             -)'1',
                                                                  0x00u, 0x00u, 0x00u,
                  /*  Reserved : 6 bytes                     */   0x00u, 0x00u, 0x00u, 0x00u, 0x00u, 0x00u
                  };
              
              #endif /* USBFS_ENABLE_MSOS_STRING */
C51 COMPILER V9.51   USBFS_DESCR                                                           05/19/2017 11:21:14 PAGE 7   

 361          
 362          /* DIE ID string descriptor for 8 bytes ID */
 363          #if defined(USBFS_ENABLE_IDSN_STRING)
                  uint8 USBFS_idSerialNumberStringDescriptor[USBFS_IDSN_DESCR_LENGTH];
              #endif /* USBFS_ENABLE_IDSN_STRING */
 366          
 367          
 368          /* [] END OF FILE */
C51 COMPILER V9.51   USBFS_DESCR                                                           05/19/2017 11:21:14 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE




MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =    533    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
